.\" Copyright (c) 2021, 2022, 2023
.\" Ariston Lorenzo <me@ariston.dev>. All rights reserved.
.\"
.\" Redistribution and use in source and binary forms, with or without
.\" modification, are permitted provided that the following conditions
.\" are met:
.\" 1. Redistributions of source code must retain the above copyright
.\"    notice, this list of conditions and the following disclaimer.
.\" 2. Redistributions in binary form must reproduce the above copyright
.\"    notice, this list of conditions and the following disclaimer in the
.\"    documentation and/or other materials provided with the distribution.
.\" 3. Neither the name of the copyright holder nor the names of its 
.\"    contributors may be used to endorse or promote products derived from
.\"    this software without specific prior written permission.
.\"
.\" THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDER AND CONTRIBUTORS ``AS IS''
.\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
.\" IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
.\" ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
.\" FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
.\" DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
.\" OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
.\" HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
.\" LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
.\" OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
.\" SUCH DAMAGE.
.\"

.Dd May 19, 2023
.Dt LINK 7
.Sh NAME
link \- A web server library for C++ built with a focus of speed.
.Sh SYNOPSIS
.In Link.hpp
.Vt Link::Server server;
.Sh DESCRIPTION
.Nm Link
is a web server library for C++ made with speed in mind. Link offers a manual
experience in making a web application and the web server and linking them
together into one program.

There's two ways of serving files to the user; either through static serving
or manually setting up responses. Serving static files or pages can be done
with:
.Vt server.SetStaticPages("public/");
.Nm public/
being the root folder of all the static files.

Manually setting up each response is only required if you either need to set
the HTTP header manually or you need to modify the HTTP link path like so:

.nf
server.Get("/", [](Link::Request* req, Link::Response* res) {
	res->SetHeader("Content-Type", "text/html; charset=UTF-8");
	std::ifstream file("index.html");
	std::string content((std::istreambuf_iterator<char>(file)),
		std::istreambuf_iterator<char>());
	res->SetBody(content); 
});
.fi

This serves the index.html file to http://localhost/ rather than having to
access the website index via http://localhost/index.html. You may also want
to see SetHeader(3) for a list of HTTP headers.
.Sh AUTHOR
.Tp
Levi Hicks

	Developer of the library itself in 2021 up to 2023.

Ariston Lorenzo

	Maintainer and Developer since 2023.

Link is a N11 Software project.
.Sh COPYRIGHT
Copyright 2021, 2022, 2023 N11 Software. All rights reserved.

This library is licensed under the BSD 3-Clause License. You may only use this
library in compliance with the license. You can get a copy of the license in
the source tree in the file COPYRIGHT.
.Sh SEE ALSO
SetHeader(3).
.Sh BUGS
linktest under certain *unknown* circumstances has issues building.
